/*
 * Speechmatics ASR REST API
 *
 * The Speechmatics Automatic Speech Recognition REST API is used to submit ASR jobs and receive the results. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@speechmatics.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RetrieveTranscriptResponse {
    /// Speechmatics JSON transcript format version number.
    #[serde(rename = "format")]
    pub format: String,
    #[serde(rename = "job")]
    pub job: Box<crate::batch::models::JobInfo>,
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::batch::models::RecognitionMetadata>,
    #[serde(rename = "results")]
    pub results: Vec<crate::batch::models::RecognitionResult>,
    /// Translations of the transcript into other languages. It is a map of ISO language codes to arrays of translated sentences. Configured using `translation_config`.
    #[serde(rename = "translations", skip_serializing_if = "Option::is_none")]
    pub translations: Option<::std::collections::HashMap<String, Vec<crate::batch::models::TranslationSentence>>>,
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<Box<crate::batch::models::SummarizationResult>>,
    #[serde(rename = "sentiment_analysis", skip_serializing_if = "Option::is_none")]
    pub sentiment_analysis: Option<Box<crate::batch::models::SentimentAnalysisResult>>,
}

impl RetrieveTranscriptResponse {
    pub fn new(format: String, job: crate::batch::models::JobInfo, metadata: crate::batch::models::RecognitionMetadata, results: Vec<crate::batch::models::RecognitionResult>) -> RetrieveTranscriptResponse {
        RetrieveTranscriptResponse {
            format,
            job: Box::new(job),
            metadata: Box::new(metadata),
            results,
            translations: None,
            summary: None,
            sentiment_analysis: None,
        }
    }
}


